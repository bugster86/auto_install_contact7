- name: Creo le virtual machine
  hosts: localhost
  connection: local
  vars_prompt:
    - name: "vcenter_host"
      prompt: "Inserisci il nome del vcenter"
      private: no
      default: "uk-vcenter-001.edge.local"
    - name: "vcenter_user"
      prompt: "Inserisci lo username per loggarti al VCENTER"
      default: "Martino.Vigano@enghouse.com"
      private: no
    - name: "vcenter_pass"
      prompt: "Inserisci la password per loggarti al VCENTER"
      private: yes

  tasks:
  - name: Carico in memoria la configurazione
    include_vars:
        file: config.json
        name: configurazione

  - name: stampo la configurazione
    debug: var=configurazione
      
  - name: "Mi assicuro che la macchina non sia presente"
    include_tasks: include/elimina_vm.yml
    with_items:
    - "{{  configurazione | json_query('servers[*].name') }}"
   

  - name: "Creo la virtual machine"
    include_tasks: include/crea_vm.yml 
    with_items:
    -  "{{  configurazione | json_query('servers') }}"  
    
  - name: personalizzo le virtual machine
    include_tasks: include/personalizza_vmachine.yml
    with_items:
    -  "{{  configurazione | json_query('servers') }}"  
    
  - name: Accendo le virtual machine
    include_tasks: include/start_vmachine.yml
    with_items:
    -  "{{  configurazione | json_query('servers') }}"     

  - file: dest=/tmp/.DNS state=absent

  - name: Creo il file con le associazioni DNS
    lineinfile: 
        create: true
        dest: /tmp/.DNS
        state: present
        line: "{{ item.0 }};{{ item.1 }}"
    with_together:
    - "{{  configurazione | json_query('servers[*].name') }}"
    - "{{  configurazione | json_query('servers[*].ip') }}"
  
  - name: "Invio la mail per inserire le entry in DNS"  
    mail:
        subject: '[ANSIBLE] Inserimento nuovi server in DNS'
        to: "{{ configurazione.lista_dns_mailto }}"
        from: ansible@reitek.com
        body: "{{ lookup('file', '/tmp/.DNS') }}"

  - name: creazione degli snapshot iniziali
    vmware_guest_snapshot:
     hostname: "{{ vcenter_host }}"
     username: "{{ vcenter_user }}"
     password: "{{ vcenter_pass }}"
     datacenter: "{{  configurazione | json_query('datacenter') }}"
     folder: "{{  configurazione | json_query('folder') }}"
     name: "{{ item }}"
     state: present
     snapshot_name: DEPLOY
     description: IL Server Appena deployato da template
     validate_certs: false
    with_items:
    - "{{  configurazione | json_query('servers[*].name') }}"
  
  - name: aggiungo i nuovi hosts all'inventory
    add_host:
        name: "{{ item.0 }}"
        ansible_ssh_host: "{{ item.1 }}"
        group: newinstall
    with_together:
    - "{{  configurazione | json_query('servers[*].name') }}"
    - "{{  configurazione | json_query('servers[*].ip') }}"

- name: Operazioni comuni a tutti i server
  hosts: newinstall
  gather_facts: true

  tasks:
  - name: Carico in memoria la configurazione
    include_vars:
        file: config.json
        name: configurazione
  - name: Parto da un server che non ha servizi attivi
    systemd: enabled=false state=stopped name={{ item }}
    with_items:
    - 'opensips.service'
    - 'contact.target'
    - 'crond.service'
    - 'httpd.service'
    - 'msac.service'
    - 'msad@1.service'
    - 'msad@2.service'
    - 'msad@3.service'
    - 'msad@4.service'
    - 'msad@5.service'
    - 'msad@6.service'
    - 'pm2-reicom.service'
    - 'rtpproxy@*.service'
    - 'sems.service'
    - 'tomcat.service'
    - 'slapd.service'
    - 'redis.service'
    - 'rasd.service'
    
  - include_tasks: include/set_ntp_server.yml
    when: "configurazione | json_query('ntp_server')  is defined"
  
  - name: Cancella eventuali file che sono del template e non devono essere sul server appena deployato
    shell: rm -fr /root/1 /root/*.rpm /root/core.* /home/reicom/core.* /home/reicom/stacktrace.* /root/fast_deploy.sh* /root/oradiag_root /root/rpmbuild /root/systemDefaultValues.sh /var/opt/reitek/ct6/ctistat/* /var/opt/reitek/ct6/procstat/* 
    check_mode: false
    
  - name: Rimuovo vecchi file di backup di ansible  
    shell: find /etc /opt /var -type f -name "*@*~" -delete
    check_mode: false
    
  - name: Spengo il servizio rsyslog
    service: name=rsyslog state=stopped
  
  - name: Rimuovo tutti i log del server
    shell: find /var/log -type f -delete      
    check_mode: false
  
  - name: Spengo il servizio rsyslog
    service: name=rsyslog state=started 
    
  - include_tasks: include/costruisci_hosts.yml
  
  # Svuoto il file per il controllo check_sip_proc onde evitare restart che arrivino fino in pro
  - copy: dest=/etc/opt/reitek/ct6/sipproc.list content='' force=yes
  
  - name: Cancello i file di backup della configurazione dei mediant
    shell: find /etc/opt/reitek/ct6/backupGateway -type f -delete
  
  
  - include_tasks: include/operazioni_cti.yml
    when: "'-cti' in inventory_hostname"
  - include_tasks: include/operazioni_ipt.yml
    when: "'-ipt' in inventory_hostname"
  - include_tasks: include/operazioni_msa.yml
    when: "'-msa' in inventory_hostname"
  - include_tasks: include/operazioni_stc.yml
    when: "'-stc' in inventory_hostname" 
  - include_tasks: include/operazioni_ecas.yml
    when: "'-ecas' in inventory_hostname"
  - include_tasks: include/operazioni_ecdb.yml
    when: "'-ecdb' in inventory_hostname"   
  - reboot:
  - shell: updatedb

  
    



